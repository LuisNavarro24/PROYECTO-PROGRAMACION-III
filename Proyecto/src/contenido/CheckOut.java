
package contenido;

import informacion.MySqlConn;
import informacion.Servicio;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class CheckOut extends javax.swing.JInternalFrame {

  
    private int precio1=900;
     private int precio2=1200;
     private int precio3=1800;
     private int extrap=200;
     
     private int tipo1 =1;
     private int tipo2 =2;
     private int tipo3 =3;
     
     private int limp=400;
     private int caf=500;
     private int spa=600;
     private int gym=700;
    
    
    
    MySqlConn conn= new MySqlConn();
    
    ArrayList <Servicio> lista = new ArrayList();
    public CheckOut() {
        initComponents();
        fecha();
    }
    
     public void fecha(){
        Calendar fecha = new GregorianCalendar();  
        String fechaout="";
        int anio = fecha.get(Calendar.YEAR);
        int mes = fecha.get(Calendar.MONTH);
        int dia = fecha.get(Calendar.DAY_OF_MONTH);  
       mes+=1;
        String dia2=String.valueOf(anio);
        String mes2=String.valueOf(mes);
        String anio2=String.valueOf(dia);
        
        Calendar fechanueva=Calendar.getInstance();
        fechanueva.set(anio,mes,dia);
        
        SimpleDateFormat dateformat=new SimpleDateFormat("dd-MM-YYYY");
        String date = dateformat.format(fechanueva.getTime());
        this.jLabelFechafin.setText(date);
    }

     public void busqueda(){
         String query = "select * from registro where Num_Habitacion = "+"'"+
                    Integer.valueOf(this.jTextFieldHabi.getText())+"'";
        this.conn.Consult(query);
        int n=0;
        try{
            this.conn.rs.last();
            n=this.conn.rs.getRow();
            this.conn.rs.first();
        }catch(Exception e){
            System.out.println("Error 1...");
        }
        if(n!=0){
            System.out.println("n  "+n);
            Object datos [][]= new Object[n][10];
            for (int i = 0; i < n; i++) {
                try{
                    datos[i][0]= this.conn.rs.getInt(1);
                    datos[i][1]= this.conn.rs.getString(2);
                    datos[i][2]= this.conn.rs.getInt(3);
                    datos[i][3]= this.conn.rs.getString(4);
                    datos[i][4]= this.conn.rs.getString(5);
                    datos[i][5]= this.conn.rs.getInt(6);
                    datos[i][6]= this.conn.rs.getInt(7);
                    datos[i][7]= this.conn.rs.getString(8);
                    datos[i][8]= this.conn.rs.getInt(9);
                    datos[i][9]=this.conn.rs.getString(10);
                    
                    this.conn.rs.next();
                }catch(Exception e){
                    System.out.println("Error 2...");
                }
                
            }
            String columnas[]={"Habitacion","Tipo","Piso","Nombre","Ciudad","Num_Huespedes","Huesped ex","Entrada","Dias"};
            jTableCheckOut.setModel(new DefaultTableModel(datos,columnas));
            //System.out.println("Tabla lista");
            
            
            
            
        }else{
            JOptionPane.showMessageDialog(this, "No hay datos...");
        }
        
        String query2 = "select * from servicios where Num_Habitacion = "+"'"+
                    Integer.valueOf(this.jTextFieldHabi.getText())+"'";
        this.conn.Consult(query2);
        int n2=0;
        try{
            this.conn.rs.last();
            n2=this.conn.rs.getRow();
            this.conn.rs.first();
        }catch(Exception e){
            System.out.println("Error 1...");
        }
        if(n2!=0){
            //System.out.println("n  "+n);
            Object datos [][]= new Object[n][6];
            for (int i = 0; i < n; i++) {
                try{
                    
                    datos[i][0]= this.conn.rs.getInt(3);
                    datos[i][1]= this.conn.rs.getInt(4);
                    datos[i][2]= this.conn.rs.getInt(5);
                    datos[i][3]= this.conn.rs.getInt(6);
                  
                    
                    this.conn.rs.next();
                }catch(Exception e){
                    System.out.println("Error 2...");
                }
                
            }
            String columnas[]={"Limpieza","Cafeteria","Spa","Gimnasio"};
            jTableServicios.setModel(new DefaultTableModel(datos,columnas));
            //System.out.println("Tabla lista");
        }else{
            //JOptionPane.showMessageDialog(this, "No hay datos...");
        }
        
        
        
        
     }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldHabi = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCheckOut = new javax.swing.JTable();
        jButtonCheckOut = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabelFechafin = new javax.swing.JLabel();
        jButtonBuscar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableServicios = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("CheckOut");
        setPreferredSize(new java.awt.Dimension(747, 402));

        jPanel1.setBackground(new java.awt.Color(255, 204, 255));

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel1.setText("Num. Habitacion");

        jScrollPane1.setViewportView(jTableCheckOut);

        jButtonCheckOut.setText("CHECK OUT");
        jButtonCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCheckOutActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabel2.setText("Fecha");

        jLabelFechafin.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jLabelFechafin.setText("En espera...");

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jTableServicios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTableServicios);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(jTextFieldHabi, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jButtonBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabelFechafin)
                .addGap(153, 153, 153))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 739, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonCheckOut)
                        .addGap(176, 176, 176))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 739, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldHabi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabelFechafin)
                    .addComponent(jButtonBuscar))
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addComponent(jButtonCheckOut)
                .addGap(226, 226, 226))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        // TODO add your handling code here:
        busqueda();
        
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCheckOutActionPerformed
//System.out.println("Entre");
        
       
        String hab= this.jTextFieldHabi.getText().trim();
        String fechaout="",fechain="";
       String query= "select * from registro where Num_Habitacion= "+"'"+hab+"'";
       String query2;
        int pisod=0,tipopiso,dias=0,extra=0,habi=0;
        String tipohab;
        String nombre="";
        int pagotot=0;
        int cuentatot=0;
        int k=0;
        String sen="Individual";
        String dob="Doble";
        String fam="Familiar";
        
        this.conn.Consult(query);
        int n =0;
        
        
        try{
            this.conn.rs.last();
            n= this.conn.rs.getRow();
            this.conn.rs.first();
            
        }catch(Exception e){
            System.out.println("No hay datos");
        }
        if(n!=0){
            Object datos [][]= new Object[n][10];
            for (int i = 0; i < n; i++) {
                try{
                    datos[i][0]= this.conn.rs.getInt(1);
                    habi=this.conn.rs.getInt(1);
                    datos[i][1]= this.conn.rs.getString(2);
                    tipohab=this.conn.rs.getString(2);
                    System.out.println(tipohab);
                    datos[i][2]= this.conn.rs.getInt(3);
                    pisod=this.conn.rs.getInt(3);
                    
                    datos[i][3]= this.conn.rs.getString(4);
                    nombre=this.conn.rs.getString(4);
                    datos[i][4]= this.conn.rs.getString(5);
                    datos[i][5]= this.conn.rs.getInt(6);
                    datos[i][6]= this.conn.rs.getInt(7);
                    extra=this.conn.rs.getInt(7);
                    datos[i][7]= this.conn.rs.getString(8);
                    fechain=this.conn.rs.getString(8);
                    datos[i][8]= this.conn.rs.getInt(9);
                    dias=this.conn.rs.getInt(9);
                    datos[i][8]= this.conn.rs.getString(10);
                    fechaout=this.conn.rs.getString(10);
                 
                if(tipohab.equalsIgnoreCase(sen)){
            //cambiar por un equals tipo con indivual 
                cuentatot=(precio1*dias);
                cuentatot=cuentatot+(extrap*extra);
                
                System.out.println("Sencilla "+cuentatot);
            }else if(tipohab.equalsIgnoreCase(dob)){
                cuentatot=(precio2*dias);
                 cuentatot=cuentatot+(extrap*extra);
                 System.out.println("Doble "+cuentatot);
                 
            }else if (tipohab.equalsIgnoreCase(fam)){
              cuentatot=(precio3*dias);
              cuentatot=cuentatot+(extrap*extra);
              System.out.println("Triple "+cuentatot);
            }    
                    
                   
                    this.conn.rs.next();
                }catch(Exception e){
                    System.out.println("Error...");
                }
                
            }
  
        }
     
        
        System.out.println("Pago por la habitacion: "+cuentatot);
        
        
        String query3= "select * from servicios where Num_Habitacion= "+"'"+hab+"'";
        this.conn.Consult(query3);
        int lim=0,caf=0,sp=0,gy=0;
        try{
            this.conn.rs.last();
            n= this.conn.rs.getRow();
            this.conn.rs.first();
            
        }catch(Exception e){
            System.out.println("Error 1...");
        }
        if(n!=0){
 
            for (int i = 0; i < n; i++) {
                try{
                    if(this.conn.rs.getInt(3)==1){
                        lim=this.limp;
                        System.out.println(lim);
                        cuentatot=cuentatot+lim;
                    }else{
                        lim=0;
                    }
                    if(this.conn.rs.getInt(4)==1){
                        caf=this.caf;
                        cuentatot=cuentatot+caf;
                    }else{
                        caf=0;
                    }
                    if(this.conn.rs.getInt(5)==1){
                        sp=this.spa;
                        cuentatot=cuentatot+sp;
                    }else{
                        sp=0;
                    }
                    if(this.conn.rs.getInt(6)==1){
                        gy=this.gym;
                        cuentatot=cuentatot+gy;
                    }else{
                        gy=0;
                    }
                    Servicio ser= new Servicio(lim,caf,sp,gy);
                    lista.add(ser);
                    
                    this.conn.rs.next();
                }catch(Exception e){
                    System.out.println("Error 2...");
                }
                
            }
          
        }else{
            JOptionPane.showMessageDialog(this,"No hay datos...");
        
    }
        
        
        
         //Apartado de calculo de la cuenta
        
        
             
                    
        if(hab.isEmpty()){
            JOptionPane.showMessageDialog(this, "Numero de habitacion vacio");
        }else{
            //En esta consulta guardo en el historial el check out para la cuenta del hotel
            String parte1 = "Insert into historial (nombre, habitacion, ingreso, salida, pago_tot) VALUES (";
                     String parte2 = "'"+nombre+"','"+habi+"','"+fechain+"','"+fechaout+"','"+cuentatot+"')";
                    query2 = parte1 + parte2;
            this.conn.Update(query2);           
            System.out.println(nombre);
            
            //Eliminacion dl huesped en la lista de disponibles y ocupados
            query= "delete from registro where Num_Habitacion= "+"'"+hab+"'";
            int j= this.conn.Update(query);
            if(j>0){
                 JOptionPane.showMessageDialog(this, "Baja confirmada");
            JOptionPane.showMessageDialog(this, "A pagar"+cuentatot);
                 
            }else
                 JOptionPane.showMessageDialog(this, "No hay seleccion de huesped");
            
            //JOptionPane.showMessageDialog(this, "A pagar"+cuentatot);
        }
                   // TODO add your handling code here:
        
        
        
    }//GEN-LAST:event_jButtonCheckOutActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonCheckOut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelFechafin;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableCheckOut;
    private javax.swing.JTable jTableServicios;
    private javax.swing.JTextField jTextFieldHabi;
    // End of variables declaration//GEN-END:variables
}
